---
env:
  browser: true
  es6: true
  node: true
  jest/globals: true
extends: 'eslint:recommended'
parser: '@typescript-eslint/parser'
parserOptions:
  project: ./tsconfig.json
  jsx: true
  useJSXTextNode: true
  ecmaVersion: 6
  sourceType: module
  ecmaFeatures:
    modules: true
plugins:
  - jest
  - '@typescript-eslint'
rules:
  # https://eslint.org/docs/rules/
  # Don't write rules covered by Prettier

  # possible errors
  for-direction: error
  getter-return: error
  no-async-promise-executor: error
  no-await-in-loop: error
  no-compare-neg-zero: error
  no-cond-assign: error
  no-console:
    - warn
    - allow:
        - warn
        - error
  no-constant-condition: error
  no-control-regex: error
  no-debugger: error
  no-dupe-args: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-empty: error
  no-empty-character-class: error
  no-ex-assign: error
  no-extra-boolean-cast: error
  no-extra-parens: off
  no-extra-semi: error
  no-func-assign: error
  no-inner-declarations: error
  no-invalid-regexp: error
  no-irregular-whitespace: error
  no-misleading-character-class: error
  no-obj-calls: error
  no-prototype-builtins: off
  no-regex-spaces: error
  no-sparse-arrays: error
  no-template-curly-in-string: error
  no-unexpected-multiline: error
  no-unreachable: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  require-atomic-updates: error
  use-isnan: error
  valid-typeof: error

  # best practices
  accessor-pairs: off
  array-callback-return: error
  block-scoped-var: error
  class-methods-use-this: error
  complexity:
    - error
    - 8
  consistent-return: error
  curly: error
  default-case: error
  dot-location:
    - error
    - property
  dot-notation:
    - error
    - allowKeywords: true
  eqeqeq:
    - error
    - always
    - null: ignore
  guard-for-in: error
  max-classes-per-file: off
  no-alert: error
  no-caller: error
  no-case-declarations: error
  no-div-regex: error
  no-else-return:
    - error
    - allowElseIf: true
  no-empty-function: off
  no-empty-pattern: error
  no-eq-null: off
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-extra-label: error
  no-fallthrough: error
  no-floating-decimal: error
  no-global-assign: error
  no-implicit-coercion: error
  no-implicit-globals: error
  no-implied-eval: error
  no-invalid-this: error
  no-iterator: error
  no-labels: error
  no-lone-blocks: error
  no-loop-func: error
  no-magic-numbers: off
  no-multi-spaces: error
  no-multi-str: error
  no-new: error
  no-new-func: error
  no-new-wrappers: error
  no-octal: error
  no-octal-escape: error
  no-param-reassign: error
  no-proto: error
  no-redeclare: error
  no-restricted-properties: error
  no-return-assign: error
  no-return-await: error
  no-script-url: error
  no-self-assign: error
  no-self-compare: error
  no-sequences: error
  no-throw-literal: error
  no-unmodified-loop-condition: error
  no-unused-expressions: error
  no-unused-labels: error
  no-useless-call: error
  no-useless-catch: error
  no-useless-concat: error
  no-useless-escape: error
  no-useless-return: error
  no-void: error
  no-warning-comments: warn
  no-with: error
  prefer-named-capture-group: error
  prefer-promise-reject-errors: error
  radix: error
  require-await: error
  require-unicode-regexp: error
  vars-on-top: error
  wrap-iife: error
  yoda: off

  # strict mode
  strict: off

  # variables
  init-declarations: error
  no-delete-var: error
  no-label-var: error
  no-restricted-globals: error
  no-shadow: error
  no-shadow-restricted-names: error
  no-undef: error
  no-undef-init: error
  no-undefined: error
  no-unused-vars: off
  no-use-before-define: error

  # Node.js
  callback-return: off
  global-require: error
  handle-callback-err: off
  no-buffer-constructor: error
  no-mixed-requires: off
  no-new-require: error
  no-path-concat: error
  no-process-env: off
  no-process-exit: off
  no-restricted-modules: off
  no-sync: off

  # stylistic issues
  array-bracket-newline: off
  array-bracket-spacing: off
  array-element-newline: off
  block-spacing: off
  brace-style: off
  camelcase: off
  capitalized-comments: off
  comma-dangle: off
  comma-spacing: off
  comma-style: off
  computed-property-spacing: off
  consistent-this: off
  eol-last: off
  func-call-spacing: off
  func-name-matching: off
  func-names: off
  func-style: off
  function-paren-newline: off
  id-blacklist: off
  id-length: off
  id-match: off
  implicit-arrow-linebreak: off
  indent: off
  jsx-quotes: off
  key-spacing: off
  keyword-spacing: off
  line-comment-position: off
  linebreak-style: off
  lines-around-comment: off
  lines-between-class-members: off
  max-depth: off
  max-len: off
  max-lines: off
  max-lines-per-function: off
  max-nested-callbacks: off
  max-params: off
  max-statements: off
  max-statements-per-line: off
  multiline-comment-style: off
  multiline-ternary: off
  new-cap: off
  new-parens: off
  newline-per-chained-call: off
  no-array-constructor: off
  no-bitwise: off
  no-continue: off
  no-inline-comments: off
  no-lonely-if: off
  no-mixed-operators: off
  no-mixed-spaces-and-tabs: off
  no-multi-assign: off
  no-multiple-empty-lines: off
  no-negated-condition: off
  no-nested-ternary: off
  no-new-object: off
  no-plusplus: off
  no-restricted-syntax: off
  no-tabs: off
  no-ternary: off
  no-trailing-spaces: off
  no-underscore-dangle: off
  no-unneeded-ternary: off
  no-whitespace-before-property: off
  nonblock-statement-body-position: off
  object-curly-newline: off
  object-curly-spacing: off
  object-property-newline: off
  one-var: off
  one-var-declaration-per-line: off
  operator-assignment: off
  operator-linebreak: off
  padded-blocks: off
  padding-line-between-statements: off
  prefer-object-spread: off
  quote-props: off
  quotes: off
  semi: off
  semi-spacing: off
  semi-style: off
  sort-keys: off
  sort-vars: off
  space-before-blocks: off
  space-before-function-paren: off
  space-in-parens: off
  space-infix-ops: off
  space-unary-ops: off
  spaced-comment: off
  switch-colon-spacing: off
  template-tag-spacing: off
  unicode-bom: off
  wrap-regex: off

  # EcmaScript 2015
  arrow-body-style: off
  arrow-parens: off
  arrow-spacing: off
  constructor-super: error
  generator-star-spacing: off
  no-class-assign: error
  no-confusing-arrow: off
  no-const-assign: error
  no-dupe-class-members: error
  no-duplicate-imports: error
  no-new-symbol: error
  no-restricted-imports: error
  no-this-before-super: error
  no-useless-computed-key: error
  no-useless-constructor: error
  no-useless-rename: error
  no-var: error
  object-shorthand: error
  prefer-arrow-callback: error
  prefer-const: error
  prefer-destructuring: error
  prefer-numeric-literals: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  require-yield: error
  rest-spread-spacing: off
  sort-imports:
    - error
    - ignoreDeclarationSort: true
  symbol-description: error
  template-curly-spacing: off
  yield-star-spacing: off

  # for typescript
  '@typescript-eslint/adjacent-overload-signatures': error
  '@typescript-eslint/array-type':
    - error
    - generic
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/ban-ts-ignore': off
  '@typescript-eslint/ban-types':
    - error
    - types:
        Object: Use {} instead
        String: Use string instead
  '@typescript-eslint/camelcase':
    - error
    - properties: always
      ignoreDestructuring: false
  '@typescript-eslint/class-name-casing': error
  '@typescript-eslint/consistent-type-definitions':
    - error
    - interface
  '@typescript-eslint/explicit-function-return-type':
    - error
    - allowExpressions: true
      allowTypedFunctionExpressions: true
      allowHigherOrderFunctions: true
  '@typescript-eslint/explicit-member-accessibility':
    - error
    - accessibility: explicit
  '@typescript-eslint/generic-type-naming': off
  '@typescript-eslint/indent': off
  '@typescript-eslint/interface-name-prefix': off
  '@typescript-eslint/member-delimiter-style': off
  '@typescript-eslint/member-naming': off
  '@typescript-eslint/member-ordering': off
  '@typescript-eslint/no-angle-bracket-type-assertion': error
  '@typescript-eslint/no-array-constructor': error
  '@typescript-eslint/no-empty-function': error
  '@typescript-eslint/no-empty-interface': error
  '@typescript-eslint/no-explicit-any': off
  '@typescript-eslint/no-extra-parens': off
  '@typescript-eslint/no-extraneous-class': error
  '@typescript-eslint/no-floating-promises': error
  '@typescript-eslint/no-for-in-array': error
  '@typescript-eslint/no-inferrable-types': error
  '@typescript-eslint/no-magic-numbers': error
  '@typescript-eslint/no-misused-new': error
  '@typescript-eslint/no-namespace': error
  '@typescript-eslint/no-non-null-assertion': error
  '@typescript-eslint/no-object-literal-type-assertion': error
  '@typescript-eslint/no-parameter-properties':
    - error
    - allows:
        - readonly
  '@typescript-eslint/no-require-imports': error
  '@typescript-eslint/no-this-alias': error
  '@typescript-eslint/no-triple-slash-reference': error
  '@typescript-eslint/no-type-alias': off
  '@typescript-eslint/no-unnecessary-qualifier': error
  '@typescript-eslint/no-unnecessary-type-assertion': error
  '@typescript-eslint/no-unused-vars': off
  '@typescript-eslint/no-use-before-define': error
  '@typescript-eslint/no-useless-constructor': error
  '@typescript-eslint/no-var-requires': error
  '@typescript-eslint/prefer-for-of': error
  '@typescript-eslint/prefer-function-type': error
  '@typescript-eslint/prefer-includes': error
  '@typescript-eslint/prefer-namespace-keyword': error
  '@typescript-eslint/prefer-regexp-exec': error
  '@typescript-eslint/prefer-string-starts-ends-with': error
  '@typescript-eslint/promise-function-async': off
  '@typescript-eslint/require-array-sort-compare': off
  '@typescript-eslint/restrict-plus-operands': error
  '@typescript-eslint/semi': off
  '@typescript-eslint/type-annotation-spacing': off
  '@typescript-eslint/unbound-method': error
  '@typescript-eslint/unified-signatures': error
